Traceback (most recent call last):
  File "/content/gdrive/MyDrive/mamba_708_categ_action_model/train.py", line 96, in <module>
    train_dreamer(exp, n_workers=args.n_workers)
  File "/content/gdrive/MyDrive/mamba_708_categ_action_model/train.py", line 23, in train_dreamer
    runner.run(exp.steps, exp.episodes)
  File "/content/gdrive/MyDrive/mamba_708_categ_action_model/agent/runners/DreamerRunner.py", line 51, in run
    self.learner.step(rollout)
  File "/content/gdrive/MyDrive/mamba_708_categ_action_model/agent/learners/DreamerLearner.py", line 126, in step
    self.train_model(samples1)
  File "/content/gdrive/MyDrive/mamba_708_categ_action_model/agent/learners/DreamerLearner.py", line 137, in train_model
    loss = model_loss(self.config, self.model, samples['observation'], samples['action'], samples['av_action'],
  File "/content/gdrive/MyDrive/mamba_708_categ_action_model/agent/optim/loss.py", line 21, in model_loss
    prior, post, deters = rollout_representation(model.representation, time_steps, embed, action, prev_state, last)
  File "/content/gdrive/MyDrive/mamba_708_categ_action_model/networks/dreamer/rnns.py", line 108, in rollout_representation
    prior_states, posterior_states = representation_model(obs_embed[t], action[t], prev_states)
  File "/usr/local/lib/python3.9/dist-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/content/gdrive/MyDrive/mamba_708_categ_action_model/networks/dreamer/rnns.py", line 89, in forward
    prior_states = self._transition_model(prev_actions, prev_states, mask)
  File "/usr/local/lib/python3.9/dist-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/content/gdrive/MyDrive/mamba_708_categ_action_model/networks/dreamer/rnns.py", line 61, in forward
    attn = self._attention_stack(stoch_input, mask=mask)
  File "/usr/local/lib/python3.9/dist-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/content/gdrive/MyDrive/mamba_708_categ_action_model/networks/transformer/layers.py", line 42, in forward
    x = self.encoder(enc_input.permute(1, 0, 2), **kwargs)
  File "/usr/local/lib/python3.9/dist-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/usr/local/lib/python3.9/dist-packages/torch/nn/modules/transformer.py", line 306, in forward
    output = mod(output, src_mask=mask, is_causal=is_causal, src_key_padding_mask=src_key_padding_mask_for_layers)
  File "/usr/local/lib/python3.9/dist-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/usr/local/lib/python3.9/dist-packages/torch/nn/modules/transformer.py", line 574, in forward
    x = self.norm2(x + self._ff_block(x))
  File "/usr/local/lib/python3.9/dist-packages/torch/nn/modules/transformer.py", line 589, in _ff_block
    x = self.linear2(self.dropout(self.activation(self.linear1(x))))
  File "/usr/local/lib/python3.9/dist-packages/torch/nn/functional.py", line 1446, in relu
    def relu(input: Tensor, inplace: bool = False) -> Tensor:
KeyboardInterrupt